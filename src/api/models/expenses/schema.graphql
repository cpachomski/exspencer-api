type Expense {
  id: Int!
  userId: Int!
  name: String!
  cost: Float!
  createdAt: String
  updatedAt: String
}

input GetExpenseInput {
  id: Int!
}

input GetExpensesInput {
  userId: Int!
}

input CreateExpenseInput {
  userId: Int!
  name: String!
  cost: Float!
}

input UpdateExpenseInput {
  id: Int!
  name: String
  cost: Float
}

input DeleteExpenseInput {
  id: Int!
}

extend type Query {
  expense(input: GetExpensesInput!): Expense!
  expenses(input: GetExpensesInput!): [Expense]!
}

extend type Mutation {
  createExpense(input: CreateExpenseInput): Expense!
  updateExpense(input: UpdateExpenseInput): Expense!
  deleteExpense(input: DeleteExpenseInput): Boolean
}
